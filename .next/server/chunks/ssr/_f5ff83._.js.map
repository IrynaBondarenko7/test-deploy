{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/iryna_bd/Documents/Projects/test-deploy/components/ProjectsItem.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProjectsItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProjectsItem() from the server but ProjectsItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ProjectsItem.tsx <module evaluation>\",\n    \"ProjectsItem\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///home/iryna_bd/Documents/Projects/test-deploy/components/ProjectsItem.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProjectsItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProjectsItem() from the server but ProjectsItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ProjectsItem.tsx\",\n    \"ProjectsItem\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///home/iryna_bd/Documents/Projects/test-deploy/components/ProjectsList.tsx"],"sourcesContent":["import React from \"react\";\nimport { ProjectsItem } from \"./ProjectsItem\";\nimport { Tab, TabGroup, TabList, TabPanel, TabPanels } from \"@headlessui/react\";\nimport { ProjectType } from \"@/components/types/type\";\n\ntype ProjectsListProps = {\n  projectsData: ProjectType[];\n};\n\nexport const ProjectsList: React.FC<ProjectsListProps> = ({ projectsData }) => {\n  return (\n    <div className=\"flex h-screen w-full justify-center\">\n      <div className=\"w-full\">\n        <TabGroup>\n          <TabList className=\"flex gap-4 justify-center\">\n            {projectsData.map(({ type }) => (\n              <Tab\n                key={type}\n                className=\"rounded-full py-1 px-3 text-sm/6 xl:text-base font-semibold text-white focus:outline-none data-[selected]:bg-white/10 data-[hover]:bg-white/5 data-[selected]:data-[hover]:bg-white/10 data-[focus]:outline-1 data-[focus]:outline-white\"\n              >\n                {type}\n              </Tab>\n            ))}\n          </TabList>\n          <TabPanels className=\"mt-3\">\n            {projectsData.map(({ type, projects }) => {\n              const sortedProjects = projects.toSorted((a, b) => b.id - a.id);\n              return (\n                <TabPanel key={type} className=\"rounded-xl bg-white/5 p-3\">\n                  <ul>\n                    {sortedProjects.map((project, index) => (\n                      <ProjectsItem\n                        key={project.id}\n                        project={project}\n                        index={index}\n                      />\n                    ))}\n                  </ul>\n                </TabPanel>\n              );\n            })}\n          </TabPanels>\n        </TabGroup>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOO,MAAM,eAA4C,CAAC,EAAE,YAAY,EAAE;IACxE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,mLAAA,CAAA,WAAQ;;kCACP,8OAAC,mLAAA,CAAA,UAAO;wBAAC,WAAU;kCAChB,aAAa,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,iBACzB,8OAAC,mLAAA,CAAA,MAAG;gCAEF,WAAU;0CAET;+BAHI;;;;;;;;;;kCAOX,8OAAC,mLAAA,CAAA,YAAS;wBAAC,WAAU;kCAClB,aAAa,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;4BACnC,MAAM,iBAAiB,SAAS,QAAQ,CAAC,CAAC,GAAG,IAAM,EAAE,EAAE,GAAG,EAAE,EAAE;4BAC9D,qBACE,8OAAC,mLAAA,CAAA,WAAQ;gCAAY,WAAU;0CAC7B,cAAA,8OAAC;8CACE,eAAe,GAAG,CAAC,CAAC,SAAS,sBAC5B,8OAAC,2HAAA,CAAA,eAAY;4CAEX,SAAS;4CACT,OAAO;2CAFF,QAAQ,EAAE;;;;;;;;;;+BAJR;;;;;wBAYnB;;;;;;;;;;;;;;;;;;;;;;AAMZ"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/iryna_bd/Documents/Projects/test-deploy/app/projects/page.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { ProjectType } from \"@/components/types/type\";\nimport { ProjectsList } from \"@/components/ProjectsList\";\n\nexport const metadata: Metadata = {\n  title: \"Iryna's Projects\",\n  description: \"React, Next.js, Javascript projects\",\n};\n\nasync function fetchProjects(): Promise<ProjectType[]> {\n  const response = await fetch(\"http://localhost:3000/api/projects/\");\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const data = await response.json();\n  return data;\n}\n\nexport default async function ProjectsPage() {\n  const projects = await fetchProjects();\n\n  return (\n    <section className=\"mt-24\">\n      <ProjectsList projectsData={projects} />\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEA,eAAe;IACb,MAAM,WAAW,MAAM,MAAM;IAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC1D;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO;AACT;AAEe,eAAe;IAC5B,MAAM,WAAW,MAAM;IAEvB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC,2HAAA,CAAA,eAAY;YAAC,cAAc;;;;;;;;;;;AAGlC"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}